{"version":3,"sources":["Detali.js"],"names":["박스","styled","div","제목","h4","props","색상","Tab","useEffect","스위치변경","누른탭","Toggle","variant","id","className","Menu","Item","Info","재고","connect","state","reducer","alert열림","reducer2","useState","modal","modal변경","useParams","find","shoes","item","histroy","useHistory","useContext","재고context","누른탭변경","스위치","타이머","setTimeout","clearTimeout","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","parseInt","src","width","title","content","price","onClick","재고변경","dispatch","type","payload","name","quan","goBack","defaultActiveKey","Link","eventKey","in","classNames","timeout"],"mappings":"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","file":"static/js/4.193d45d9.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport { 재고context } from './App.js'\r\n\r\nimport { Nav, TabContent,Dropdown} from 'react-bootstrap';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet 박스 = styled.div`\r\n   padding : 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\nfont-size : 25px;\r\ncolor : ${props => props.색상}\r\n`;\r\n\r\n\r\nfunction Detail(props) {\r\n  {/* Detail컴포넌트 시작 */ }\r\n\r\n  let [modal, modal변경] = useState(true);\r\n  let [inputData, inputData변경] = useState('');\r\n  let { id } = useParams();\r\n\r\n  let find = props.shoes.find(function (item) {\r\n    return item.id == id\r\n  });\r\n\r\n  let histroy = useHistory();\r\n  let 재고 = useContext(재고context); {/*contextAPI */ }\r\n\r\n  let [누른탭, 누른탭변경] = useState(0); {/* Tap 만들기 */ }\r\n  let [스위치, 스위치변경] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let 타이머 = setTimeout(() => { modal변경(false) }, 2000);\r\n    return () => { clearTimeout(타이머) }\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    var arr = localStorage.getItem('watched');\r\n    if (arr == null) {\r\n      arr = []\r\n    } else {\r\n      arr = JSON.parse(arr)\r\n    }\r\n    arr.push(id);\r\n    arr = new Set(arr);\r\n    arr = [...arr];\r\n\r\n    localStorage.setItem('watched', JSON.stringify(arr));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <박스>\r\n        <제목 className=\"red\">{parseInt(id) + 1}번째 상품입니다.</제목>\r\n      </박스>\r\n      {\r\n        modal === true\r\n          ? <div className=\"my-alert2\">\r\n            <p>재고가 얼마 남지 않았습니다.</p>\r\n          </div>\r\n          : null\r\n      }\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src={'https://codingapple1.github.io/shop/shoes' + (parseInt(id) + 1) + '.jpg'} width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{find.title}</h4>\r\n          <p>{find.content}</p>\r\n          <p>{find.price}</p>\r\n\r\n          <Info 재고={props.재고} />\r\n\r\n          <button className=\"btn btn-danger\" onClick={() => {\r\n\r\n\r\n            props.재고변경([9, 11, 12]);\r\n            props.dispatch({ type: '항목추가', payload: { id: find.id, name: find.title, quan: 3 } });\r\n            //histroy.push('/cart');\r\n\r\n          }}>주문하기</button>\r\n          <button className=\"btn btn-danger ml-2\" onClick={() => {\r\n            histroy.goBack();\r\n          }}>뒤로가기</button>\r\n        </div>\r\n      </div>\r\n\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-0\" onClick={() => { 스위치변경(false); 누른탭변경(0) }}>Active</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\" onClick={() => { 스위치변경(false); 누른탭변경(1) }}>Option 2</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n\r\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={5000}>\r\n        <Tab 누른탭={누른탭} 스위치변경={스위치변경} />\r\n      </CSSTransition>\r\n\r\n\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nfunction Tab(props) {\r\n\r\n  useEffect(() => {\r\n    props.스위치변경(true);\r\n  })\r\n\r\n  if (props.누른탭 === 0) {\r\n    return (\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"mt-3\">\r\n          Size👟\r\n  </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item>230</Dropdown.Item>\r\n          <Dropdown.Item>240</Dropdown.Item>\r\n          <Dropdown.Item>250</Dropdown.Item>\r\n          <Dropdown.Item>260</Dropdown.Item>\r\n          <Dropdown.Item>270</Dropdown.Item>\r\n          <Dropdown.Item>280</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    )\r\n\r\n  } else if (props.누른탭 === 1) {\r\n    return <div>마음에드는 신발을 찾아보세요!</div>\r\n  } else if (props.누른탭 === 2) {\r\n    return <div>2번째 내용입니다</div>\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nfunction Info(props) {\r\n  return (\r\n    <p>재고 : {props.재고[0]} </p>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction state를props화(state) {\r\n  return {\r\n    state: state.reducer,\r\n    alert열림: state.reducer2\r\n  }\r\n}\r\nexport default connect(state를props화)(Detail)\r\n\r\n\r\n"],"sourceRoot":""}
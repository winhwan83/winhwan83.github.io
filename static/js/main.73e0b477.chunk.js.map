{"version":3,"sources":["Cart.js","data.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["connect","state","reducer","alert열림","reducer2","props","Table","striped","bordered","hover","variant","map","a","i","name","id","quan","onClick","dispatch","type","데이터","className","title","content","price","Detail","lazy","재고context","React","createContext","Loding","Card","useContext","history","useHistory","push","shoes","src","width","Test","재고","App","useState","재고변경","Data","shoes변경","modal","modal변경","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","exact","path","Jumbotron","Button","Provider","value","axios","get","then","result","data","catch","console","log","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","payload","copy","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.73e0b477.chunk.js","sourcesContent":["import React, { useEffect, memo } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom/cjs/react-dom.development';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction Cart(props) {\r\n    return (\r\n        <div>\r\n            <Table striped bordered hover variant=\"dark\">\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>상품명</th>\r\n                    <th>분류</th>\r\n                    <th>수량</th>\r\n                    <th>변경</th>\r\n                </tr>\r\n                {\r\n\r\n                    props.state.map(function (a, i) {\r\n                        return (\r\n                            <tr key={i}>\r\n                                <td>{[i + 1]}</td>\r\n                                <td>{a.name}</td>\r\n                                <td>{a.id}</td>\r\n                                <td>{a.quan}</td>\r\n                                <td><button onClick={() => { props.dispatch({ type: '수량증가', 데이터 : a.id  } ) }}>+</button>       \r\n                                    <button onClick={() => { props.dispatch({ type: '수량감소', 데이터 : a.id  } ) }}>-</button></td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n\r\n                }\r\n            </Table>\r\n            {    props.alert열림 === true\r\n\r\n                ? <div className=\"my-alert2\">\r\n                    <p>지금 구매하시면 신규할인 20%</p>\r\n                    <button onClick={()=>{ props.dispatch({ type: '닫기' }) }}>닫기</button>\r\n                   </div>\r\n                : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// function CartData(props) {\r\n//     return (\r\n//         <tr>\r\n//             <td>1</td>\r\n//             <td>{props.state[0].name}</td>\r\n//             <td>{props.state[0].id}</td>\r\n//             <td>{props.state[0].quan}</td>\r\n//         </tr>\r\n//     )\r\n// }\r\n\r\n\r\nfunction state를props화(state) {\r\n    return {\r\n        state: state.reducer,\r\n        alert열림: state.reducer2\r\n    }\r\n}\r\nexport default connect(state를props화)(Cart)\r\n\r\n// export default Cart;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default[\r\n    {\r\n        id : 0,\r\n        title : \"White and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n      },\r\n    \r\n      {\r\n        id : 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n      },\r\n    \r\n      {\r\n        id : 2,\r\n        title : \"Grey Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 130000\r\n      }\r\n\r\n]","import React, { useContext, useState, lazy, Suspense } from 'react';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from 'react-bootstrap';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport Cart from './Cart.js';\nimport axios from 'axios';\nimport './App.css';\nimport Data from './data.js';\nimport './Detail.scss';\n// import Detail from './Detali.js';\n// 라이브러리에서 가져오는 데이터들을 가장 상단에 위치하게하고 밑에 써야한다\nlet Detail = lazy(() => { return import('./Detali.js') });\n\n\n\n\n\n\n\n\nexport let 재고context = React.createContext();\n\n\n\nfunction App() {\n\n  let [재고, 재고변경] = useState([10, 11, 12]);\n  let [shoes, shoes변경] = useState(Data);\n\n  let [modal, modal변경] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand as={Link} to=\"/\">✨✨ShoesTop✨✨</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/Detail/0\">Detail</Nav.Link>\n            <Nav.Link as={Link} to=\"/Cart\">Cart</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>40% Season OFF🎁</h1>\n            <p>인기있는 신발들을 40% 할인된 가격으로 만나보세요!</p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n\n\n\n            <재고context.Provider value={재고}>  {/*재고state를 공유할거다*/}\n\n              <div className=\"row\">\n                {\n                  shoes.map((a, i) => {\n                    return (\n                      <Card shoes={a} i={i} key={i} />\n                    )\n                  })\n                }\n              </div>\n\n            </재고context.Provider>\n\n\n\n\n            {\n              modal === true\n                ? <Loding />\n                : null\n            }\n            <button className=\"btn btn-primary\" onClick={() => {\n              modal변경(true);\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n                .then((result) => {\n                  modal변경(false);\n                  shoes변경([...shoes, ...result.data]);\n                })\n\n                .catch(() => {\n                  modal변경(false);\n                  console.log('실패')\n                })\n            }}>더보기</button>\n          </div>\n        </Route>\n \n        <Route path=\"/Detail/:id\">\n\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>로딩중</div>}>\n              <Detail  shoes={shoes} 재고={재고} 재고변경={재고변경} />\n            </Suspense>\n          </재고context.Provider>\n\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n\n\n      </Switch>\n\n\n\n    </div>\n  );\n}\n\nfunction Loding() {\n  return (\n    <div className=\"Loding\">😥로딩중😥</div>\n  )\n}\n\n\n\nfunction Card(props) {\n\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  return (\n    \n    <div className=\"col-md-4\" onClick={\n      () => history.push('/detail/' + props.shoes.id)}>\n      <img src={'https://codingapple1.github.io/shop/shoes' + (props.i + 1) + '.jpg'} width=\"100%\" />\n      <h4>{props.shoes.title}</h4>\n      <p>{props.shoes.content} & {props.shoes.price}원</p>\n      <Test i={props.i} />  {/* 전달하는걸 props */}\n    </div>\n  )\n}\n\n\n\nfunction Test(props) {\n  let 재고 = useContext(재고context);\n  return <p>재고 : {재고[props.i]}개 👟 </p>\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\n\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션){\n   if(액션.type === '닫기'){\n    state = false;\n    return state\n   }\n  else{\n  return state\n  }\n}\nlet 초기값 = [];\n\nfunction reducer(state = 초기값, 액션) {\n if (액션.type === '항목추가') {\n\n  //state안에 id : 액션.데이터 인게 있나?\n let found =   state.findIndex((a)=>{ return a.id === 액션.payload.id });\n\n   if( found >= 0){\n    let copy = [...state];\n    copy[found].quan++;\n    return copy\n   }\n    else {\n    let copy = [...state];\n    copy.push(액션.payload);\n    return copy\n   }\n\n  }\n\n  else if (액션.type === '수량증가') {\n    let copy = [...state];\n    copy[액션.데이터].quan++;\n    return copy\n  }\n\n  else if (액션.type === '수량감소') {\n    let copy = [...state];\n    copy[액션.데이터].quan--;\n    if(copy[액션.데이터].quan < 0){\n      copy[액션.데이터].quan++;\n    }\n\n    return copy\n  }\n\n  else {\n    return state\n  }\n\n}\n\nlet store = createStore(combineReducers({reducer,reducer2}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
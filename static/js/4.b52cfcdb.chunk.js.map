{"version":3,"sources":["Detali.js"],"names":["박스","styled","div","제목","h4","props","색상","Tab","useEffect","스위치변경","누른탭","Info","재고","connect","state","reducer","alert열림","reducer2","useState","modal","modal변경","id","useParams","find","shoes","item","histroy","useHistory","useContext","재고context","누른탭변경","스위치","타이머","setTimeout","clearTimeout","className","src","width","title","content","price","onClick","재고변경","dispatch","type","payload","name","quan","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"wMAUIA,EAAKC,IAAOC,IAAV,gDAIFC,EAAKF,IAAOG,GAAV,4DAEI,SAAAC,GAAK,OAAIA,EAAMC,gBAsFzB,SAASC,EAAIF,GAMX,OAJAG,qBAAU,WACRH,EAAMI,gCAAM,MAGI,IAAdJ,EAAMK,mBACD,+EACgB,IAAdL,EAAMK,mBACR,+EACgB,IAAdL,EAAMK,mBACR,oFADF,EAQT,SAASC,EAAKN,GACZ,OACE,gDAASA,EAAMO,aAAG,GAAlB,OAYWC,uBANf,SAAsBC,GACpB,MAAO,CACHA,MAAOA,EAAMC,QACbC,oBAASF,EAAMG,YAGNJ,EAlHf,SAAgBR,GAEd,MAAuBa,oBAAS,GAAhC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAA+BF,mBAAS,IAAxC,mBACMG,GADN,UACaC,cAAPD,IAEFE,EAAOlB,EAAMmB,MAAMD,MAAK,SAAUE,GACpC,OAAOA,EAAKJ,IAAMA,KAGhBK,EAAUC,cAGd,GAFSC,qBAAWC,KAEDX,mBAAS,IAA5B,mBAAKR,EAAL,KAAUoB,EAAV,KACA,EAAmBZ,oBAAS,GAA5B,mBAAKa,EAAL,KAAUtB,EAAV,KAUA,OARAD,qBAAU,WACR,IAAIwB,EAAMC,YAAW,WAAQb,GAAQ,KAAU,KAC/C,OAAO,WAAQc,aAAaF,MAC3B,IAMD,sBAAKG,UAAU,YAAf,UACE,cAACnC,EAAD,UACE,eAACG,EAAD,CAAIgC,UAAU,MAAd,UAAqBd,EAArB,qDAGU,IAAVF,EACI,qBAAKgB,UAAU,YAAf,SACA,+GAEA,KAEN,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKC,IAAI,iDAAiDC,MAAM,WAElE,sBAAKF,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBZ,EAAKe,QAC3B,4BAAIf,EAAKgB,UACT,4BAAIhB,EAAKiB,QAET,cAAC7B,EAAD,CAAMC,eAAIP,EAAMO,eAEhB,wBAAQuB,UAAU,iBAAiBM,QAAS,WAG1CpC,EAAMqC,yBAAK,CAAC,EAAG,GAAI,KACnBrC,EAAMsC,SAAS,CAACC,KAAO,2BAAQC,QAAU,CAACxB,GAAGE,EAAKF,GAAIyB,KAAKvB,EAAKe,MAAOS,KAAO,MAJhF,sCAQA,wBAAQZ,UAAU,sBAAsBM,QAAS,WAC/Cf,EAAQsB,UADV,4CAMJ,eAAC,IAAD,CAAKb,UAAU,OAAOc,QAAQ,OAAOC,iBAAiB,SAAtD,UACE,cAAC,IAAIC,KAAL,UACE,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASZ,QAAS,WAAQhC,GAAM,GAAQqB,EAAM,IAAjE,sBAEF,cAAC,IAAIqB,KAAL,UACE,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASZ,QAAS,WAAOhC,GAAM,GAAQqB,EAAM,IAAhE,2BAKJ,cAAC,IAAD,CAAewB,GAAIvB,EAAKwB,WAAW,MAAMC,QAAS,IAAlD,SACE,cAACjD,EAAD,CAAKG,qBAAKA,EAAKD,iCAAOA","file":"static/js/4.b52cfcdb.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport { 재고context } from './App.js'\r\n\r\nimport { Nav, TabContent } from 'react-bootstrap';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet 박스 = styled.div`\r\n   padding : 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\nfont-size : 25px;\r\ncolor : ${props => props.색상}\r\n`;\r\n\r\n\r\nfunction Detail(props) {     {/* Detail컴포넌트 시작 */}\r\n\r\n  let [modal, modal변경] = useState(true);\r\n  let [inputData, inputData변경] = useState('');\r\n  let { id } = useParams();\r\n\r\n  let find = props.shoes.find(function (item) {\r\n    return item.id == id\r\n  });\r\n\r\n  let histroy = useHistory();\r\n  let 재고 = useContext(재고context);    {/*contextAPI */}\r\n\r\n  let [누른탭, 누른탭변경] = useState(0);       {/* Tap 만들기 */}\r\n  let [스위치, 스위치변경] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let 타이머 = setTimeout(() => { modal변경(false) }, 2000);\r\n    return () => { clearTimeout(타이머) }\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <박스>\r\n        <제목 className=\"red\">{id}번째 상품입니다.</제목>\r\n      </박스>\r\n      {\r\n        modal === true\r\n          ? <div className=\"my-alert2\">\r\n            <p>재고가 얼마 남지 않았습니다.</p>\r\n          </div>\r\n          : null\r\n      }\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{find.title}</h4>\r\n          <p>{find.content}</p>\r\n          <p>{find.price}</p>\r\n\r\n          <Info 재고={props.재고} />\r\n\r\n          <button className=\"btn btn-danger\" onClick={() => { \r\n\r\n\r\n            props.재고변경([9, 11, 12]);\r\n            props.dispatch({type : '항목추가', payload : {id:find.id, name:find.title, quan : 3}});\r\n            //histroy.push('/cart');\r\n\r\n            }}>주문하기</button>\r\n          <button className=\"btn btn-danger ml-2\" onClick={() => {\r\n            histroy.goBack();\r\n          }}>뒤로가기</button>\r\n        </div>\r\n      </div>\r\n\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-0\" onClick={() => { 스위치변경(false); 누른탭변경(0) }}>Active</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\" onClick={() => {스위치변경(false); 누른탭변경(1) }}>Option 2</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n\r\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={5000}>\r\n        <Tab 누른탭={누른탭} 스위치변경={스위치변경} />\r\n      </CSSTransition>\r\n\r\n\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nfunction Tab(props) {\r\n\r\n  useEffect(()=>{\r\n    props.스위치변경(true);\r\n  })\r\n\r\n  if (props.누른탭 === 0) {\r\n    return <div>0번째 내용입니다</div>\r\n  } else if (props.누른탭 === 1) {\r\n    return <div>1번째 내용입니다</div>\r\n  } else if (props.누른탭 === 2) {\r\n    return <div>2번째 내용입니다</div>\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nfunction Info(props) {\r\n  return (\r\n    <p>재고 : {props.재고[0]} </p>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction state를props화(state) {\r\n  return {\r\n      state: state.reducer,\r\n      alert열림: state.reducer2\r\n  }\r\n}\r\nexport default connect(state를props화)(Detail)\r\n\r\n"],"sourceRoot":""}